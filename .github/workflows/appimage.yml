name: appimage

on: [push, pull_request, workflow_dispatch]

env:
  CTEST_PARALLEL_LEVEL: "1"
  CMAKE_BUILD_PARALLEL_LEVEL: "4"

jobs:
  appimage:

    runs-on: ubuntu-latest

    container:
      image: centos:7
      options: --privileged # Needed for loading the fuse module.

    permissions:
      contents: read

    steps:
    - name: Prepare the system
      run: |
        yum install -y centos-release-scl epel-release
        yum update -y
        yum install -y wget python3 python3-pip fuse-libs file cmake3 devtoolset-11 rh-git227 # git>=2.18 for checkout@v3.
        pip3 install sphinx
        mkdir -p /usr/local/bin
        ln -s /usr/bin/cmake3 /usr/local/bin/cmake
        ln -s /usr/bin/ctest3 /usr/local/bin/ctest
    - name: Install ncurses
      shell: 'scl enable devtoolset-11 "bash {0}"'
      run: |
        wget -O /ncurses.tar.gz https://invisible-island.net/archives/ncurses/ncurses-6.3.tar.gz
        mkdir /ncurses
        tar xf /ncurses.tar.gz --strip-components=1 -C /ncurses
        mkdir /ncurses-prefix
        pushd /ncurses
        env TERMINFO= TERMINFO_DIRS= ./configure --without-shared
        make -j$(nproc)
        make install DESTDIR=/ncurses-prefix
        popd
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
      env:
        PATH: /opt/rh/rh-git227/root/bin:/usr/bin
        LD_LIBRARY_PATH: /opt/rh/httpd24/root/usr/lib64
    - name: Create version file
      shell: 'scl enable devtoolset-11 rh-git227 "bash {0}"'
      # A 'version' file is needed to overwrite the one generated by the
      # git_version_gen.sh script as the AppImage commit must be dropped.
      run: git describe --always HEAD~1 > version
    - name: Prepare AppImage
      shell: 'scl enable devtoolset-11 rh-git227 "bash {0}"'
      env:
        FISH_NCURSES_ROOT: /ncurses-prefix/usr
        LC_CTYPE: en_US.UTF-8
      run: ./build_tools/make_appimage.sh
    - name: Verify dependencies
      shell: 'scl enable devtoolset-11 rh-git227 "bash {0}"'
      run: |
        ldd ./build/fish
        ! ldd ./build/fish | grep curses
        ! ldd ./build/fish | grep tinfo
        ! ldd ./build/fish | grep stdc++
        ! ldd ./build/fish | grep gcc_s
    - uses: actions/upload-artifact@v3
      with:
        name: appimage
        path: '*.AppImage'
        retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: [appimage]
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2 # NOTE: there is 1 commit to drop.
    - uses: actions/download-artifact@v3
    - run: echo "tag=$(basename appimage/*.AppImage .AppImage)" >> $GITHUB_ENV
    - run: echo "rev=$(git rev-parse HEAD~1)" >> $GITHUB_ENV
    - uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.tag }}
        target_commitish: ${{ env.rev }}
        body: fish-shell/fish-shell@${{ env.rev }}
        files: 'appimage/*.AppImage'
